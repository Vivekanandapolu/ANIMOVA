{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport apiUrls from 'src/app/shared/apiUrls';\nexport let LoginComponent = class LoginComponent {\n  constructor(http, toastr, router) {\n    this.http = http;\n    this.toastr = toastr;\n    this.router = router;\n    this.showPass = false;\n    this.currentPage = '';\n    this.formData = {};\n  }\n  ngOnInit() {\n    localStorage.clear();\n    this.currentPage = '';\n  }\n  toggleInputClass(event) {\n    const inputElement = event.target;\n    if (inputElement.value) {\n      inputElement.classList.add('not-empty');\n    } else {\n      inputElement.classList.remove('not-empty');\n    }\n  }\n  login(form) {\n    if (form.invalid) {\n      form.form.markAllAsTouched();\n    }\n    if (form.valid) {\n      console.log(form.value);\n      this.http.post(apiUrls.apiUrls.login, form.value).subscribe(res => {\n        if (!res?.success) {\n          throw this.toastr.error(res.message);\n        }\n        this.toastr.success(res.message);\n        localStorage.setItem('token', res?.token);\n      });\n    }\n  }\n  forgotPassword(form) {\n    if (form.invalid) {\n      form.form.markAllAsTouched();\n    }\n    if (form.valid) {\n      console.log(form.value);\n      this.http.post(apiUrls.apiUrls.send_password, form.value).subscribe(res => {\n        if (!res?.success) {\n          throw this.toastr.error(res.message);\n        }\n        this.toastr.success(res.message);\n        setTimeout(() => {\n          window.location.reload();\n        }, 1500);\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","apiUrls","LoginComponent","constructor","http","toastr","router","showPass","currentPage","formData","ngOnInit","localStorage","clear","toggleInputClass","event","inputElement","target","value","classList","add","remove","login","form","invalid","markAllAsTouched","valid","console","log","post","subscribe","res","success","error","message","setItem","token","forgotPassword","send_password","setTimeout","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/caratred/personel projects/Angular_Practices/Mobile First Designs/movies-app/src/app/Components/Authentication/login/login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport apiUrls from 'src/app/shared/apiUrls';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  showPass: boolean = false\n  currentPage: any = ''\n  formData: any = {}\n\n  constructor(private http: HttpClient, private toastr: ToastrService, private router: Router) {\n\n  }\n  ngOnInit(): void {\n    localStorage.clear()\n    this.currentPage = ''\n  }\n\n  toggleInputClass(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.value) {\n      inputElement.classList.add('not-empty');\n    } else {\n      inputElement.classList.remove('not-empty');\n    }\n  }\n\n  login(form: NgForm) {\n    if (form.invalid) {\n      form.form.markAllAsTouched()\n    }\n    if (form.valid) {\n      console.log(form.value);\n      this.http.post(apiUrls.apiUrls.login, form.value).subscribe((res: any) => {\n        if (!res?.success) {\n          throw this.toastr.error(res.message)\n        }\n        this.toastr.success(res.message)\n        localStorage.setItem('token', res?.token)\n      })\n    }\n  }\n  forgotPassword(form: NgForm) {\n    if (form.invalid) {\n      form.form.markAllAsTouched()\n    }\n    if (form.valid) {\n      console.log(form.value);\n      this.http.post(apiUrls.apiUrls.send_password, form.value).subscribe((res: any) => {\n        if (!res?.success) {\n          throw this.toastr.error(res.message)\n        }\n        this.toastr.success(res.message)\n        setTimeout(() => { window.location.reload() }, 1500)\n      })\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAIjD,OAAOC,OAAO,MAAM,wBAAwB;AAOrC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,IAAgB,EAAUC,MAAqB,EAAUC,MAAc;IAAvE,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAJnF,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,WAAW,GAAQ,EAAE;IACrB,KAAAC,QAAQ,GAAQ,EAAE;EAIlB;EACAC,QAAQA,CAAA;IACNC,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAACJ,WAAW,GAAG,EAAE;EACvB;EAEAK,gBAAgBA,CAACC,KAAY;IAC3B,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAA0B;IACrD,IAAID,YAAY,CAACE,KAAK,EAAE;MACtBF,YAAY,CAACG,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;KACxC,MAAM;MACLJ,YAAY,CAACG,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;;EAE9C;EAEAC,KAAKA,CAACC,IAAY;IAChB,IAAIA,IAAI,CAACC,OAAO,EAAE;MAChBD,IAAI,CAACA,IAAI,CAACE,gBAAgB,EAAE;;IAE9B,IAAIF,IAAI,CAACG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACL,KAAK,CAAC;MACvB,IAAI,CAACb,IAAI,CAACwB,IAAI,CAAC3B,OAAO,CAACA,OAAO,CAACoB,KAAK,EAAEC,IAAI,CAACL,KAAK,CAAC,CAACY,SAAS,CAAEC,GAAQ,IAAI;QACvE,IAAI,CAACA,GAAG,EAAEC,OAAO,EAAE;UACjB,MAAM,IAAI,CAAC1B,MAAM,CAAC2B,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;;QAEtC,IAAI,CAAC5B,MAAM,CAAC0B,OAAO,CAACD,GAAG,CAACG,OAAO,CAAC;QAChCtB,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAEJ,GAAG,EAAEK,KAAK,CAAC;MAC3C,CAAC,CAAC;;EAEN;EACAC,cAAcA,CAACd,IAAY;IACzB,IAAIA,IAAI,CAACC,OAAO,EAAE;MAChBD,IAAI,CAACA,IAAI,CAACE,gBAAgB,EAAE;;IAE9B,IAAIF,IAAI,CAACG,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACL,KAAK,CAAC;MACvB,IAAI,CAACb,IAAI,CAACwB,IAAI,CAAC3B,OAAO,CAACA,OAAO,CAACoC,aAAa,EAAEf,IAAI,CAACL,KAAK,CAAC,CAACY,SAAS,CAAEC,GAAQ,IAAI;QAC/E,IAAI,CAACA,GAAG,EAAEC,OAAO,EAAE;UACjB,MAAM,IAAI,CAAC1B,MAAM,CAAC2B,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;;QAEtC,IAAI,CAAC5B,MAAM,CAAC0B,OAAO,CAACD,GAAG,CAACG,OAAO,CAAC;QAChCK,UAAU,CAAC,MAAK;UAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAAC,CAAC,EAAE,IAAI,CAAC;MACtD,CAAC,CAAC;;EAEN;CACD;AApDYvC,cAAc,GAAAwC,UAAA,EAL1B1C,SAAS,CAAC;EACT2C,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW3C,cAAc,CAoD1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}